---

###common values for all activities

- name: meraki deployment
  hosts: localhost
  collections:
    - cisco.meraki
    - community.general.cisco_webex

  vars_prompt:
    - name: auth_key
      prompt: "Enter your API Key: "
      private: yes

    - name: network_name
      prompt: "Enter your Network Name: "
      private: no

  vars:
    org_name: "{{ org_info.m_org_name }}"
    roomid: "{{ webex_teams.roomid }}"
    webex_api: "{{ webex_teams.webex_api }}"
    network_name: "{{ netname }}"
    cat_user: "{{ catalyst.username }}"
    cat_pass: "{{ catalyst.password }}"

    
  vars_files:
    - '../vars.yaml'
    
  tasks:

    # load Vars as Dictionaries
    - name: include network vars
      include_vars:
        file: ./{{ network_name|lower }}/net-vars.yaml
        name: netvars

    - name: include variables for devices
      include_vars:
        file: ./{{ network_name|lower }}/meraki_nodes.yaml
        name: meraki_nodes

    - name: include variables for addresses
      include_vars: 
        file: ./{{ network_name|lower }}/mx-vlans.yaml
        name: addresses

    - name: include variables for network specific ssids
      include_vars: 
        file: ./{{ network_name|lower }}/ssid.yaml
        name: ssids

    - name: include variables for meraki switchports
      include_vars:
        file: ./{{ network_name|lower }}/m_swports.yaml
        name: m_swports

    - name: include variables for catalyst switchports
      include_vars:
        file: ./{{ network_name|lower }}/c_swports.yaml
        name: c_swports

    - name: include Common elements for all networks
      include_vars:
        file: ./net-common/ssid.yaml
        name: ssid_common

    - name: Configure - Create network if it does not Exist
      cisco.meraki.meraki_network:
         auth_key: "{{ auth_key }}"
         state: present
         org_name: "{{ org_name }}"
         name: "{{ item.value.network_name }}"
         type:
           - switch
           - appliance
           - wireless
      register: add_network
      loop: "{{ lookup('dict', meraki_nodes, wantlist=True) }}"
      when: "'node-1' in item.key"

    #- debug:
        #var: add_network

    - name: Configure - Add devices to Network
      cisco.meraki.meraki_device:
        auth_key: "{{ auth_key }}"
        org_name: "{{ org_name }}"
        net_name: "{{ network_name }}"
        state: present
        serial: "{{ item.value.serial_no }}"
      register: add_node
      loop: "{{ lookup('dict', meraki_nodes, wantlist=True) }}"
      when: item.value.platform != "catalyst"

    #- debug:
        #var: add_node

    - name: Configure - Update device Information
      cisco.meraki.meraki_device:
        auth_key: "{{ auth_key }}"
        org_name: "{{ org_name }}"
        net_name: "{{ network_name }}"
        state: present
        serial: "{{ item.value.serial_no }}"
        name: " {{ item.value.device_name }}"
        move_map_marker: no
      register: update_node
      loop: "{{ lookup('dict', meraki_nodes, wantlist=True) }}"
      when: item.value.platform != "catalyst"


    - name: WebexTeams - update endpoint information
      community.general.cisco_webex:
        recipient_type: roomId
        recipient_id: "{{ roomid }}"
        msg_type: text
        personal_token: "{{ webex_api }}"
        msg: "Device Name {{ item.value.device_name }} with Serial {{ item.value.serial_no }} has been added to Network {{ network_name }}"
      loop: "{{ lookup('dict', meraki_nodes, wantlist=True) }}"


    - name: Configure - Configure - Enable Vlans in MX Networks
      cisco.meraki.meraki_network:
        auth_key: "{{ auth_key }}"
        state: present
        org_name: "{{ org_name }}"
        net_name: "{{ network_name }}"
        state: present


    - name: WebexTeams - add vlans
      community.general.cisco_webex:
        recipient_type: roomId
        recipient_id: "{{ roomid }}"
        msg_type: text
        personal_token: "{{ webex_api }}"
        msg: " Vlan Support on the Security Appliance in Network {{ network_name }} has been enabled ."

    - name: Configure - create mx vlans
      cisco.meraki.meraki_mx_vlan:
        auth_key: "{{ auth_key }}"
        org_name: "{{ org_name }}"
        net_name: "{{ item.value.network_name }}"
        state: present
        vlan_id: "{{ item.value.vlan_id }}"
        name: "{{ item.value.name }}"
        subnet: "{{ item.value.subnet }}"
        appliance_ip: "{{ item.value.default_gw }}"
        dhcp_handling: "{{ item.value.dhcp_handling}}"
        dhcp_lease_time: "{{ item.value.dhcp_lease_time }}"
        dhcp_boot_options_enabled: "{{ item.value.dhcp_boot_options_enabled }}"
      delegate_to: localhost
      register: add_vlan
      ignore_errors: yes
      loop: "{{ lookup('dict', addresses, wantlist=True) }}"


    #- debug:
        #var: add_vlan


    - name: WebexTeams - create mx vlans
      community.general.cisco_webex:
        recipient_type: roomId
        recipient_id: "{{ roomid }}"
        msg_type: text
        personal_token: "{{ webex_api }}"
        msg: "VlanID {{ item.data.id }} and IP Subnet {{ item.data.subnet }} have been added to the MX in Network {{ network_name }}."
      loop: "{{ add_vlan.results }}"


    - name: Configure - Delete Default SSID
      cisco.meraki.meraki_mr_ssid:
        auth_key: "{{ auth_key }}"
        org_name: "{{ org_name }}"
        net_name: "{{ network_name }}"
        state: absent
        name: "{{ network_name }} - wireless WiFi"
      register: delete_default_ssid


        # since we need multiple tasks we will include them in the same iterator see ./tasks/ssids-tasks.yaml.   
    - name: Configure - Modify network ssids
      include_tasks: ../tasks/ssids-tasks.yaml
      

    #- debug:
        #var: add_ssid


    - name: WebexTeams - add ssids
      community.general.cisco_webex:
        recipient_type: roomId
        recipient_id: "{{ roomid }}"
        msg_type: text
        personal_token: "{{ webex_api }}"
        msg: "SSID ID: {{ item.data.number }} with Name: {{ item.data.name }}  in Network {{ network_name }} has been created."
      loop: "{{ add_ssid.results + add_ssid_common.results }}"



    - name: insert a pause for API to catchup
      pause:
        seconds: 5

      
    - name: Configure - add ms switch port vlans
      cisco.meraki.meraki_ms_switchport:
        auth_key: "{{ auth_key }}"
        state: present
        serial: "{{ item.value.serial }}"
        number: "{{ item.value.number }}"
        enabled: "{{ item.value.enabled }}"
        name: "{{ item.value.name }}"
        tags: "{{ item.value.tags }}"
        type: "{{ item.value.type }}"
        vlan: "{{ item.value.vlan }}"
      delegate_to: localhost
      register: add_ms_swports
      ignore_errors: yes
      loop: "{{ lookup('dict', m_swports, wantlist=True) }}"
      when: item.value.platform != "catalyst"


    #- debug:
        #var: add_ms_swports


    - name: WebexTeams - add ms switch port vlans
      community.general.cisco_webex:
        recipient_type: roomId
        recipient_id: "{{ roomid }}"
        msg_type: text
        personal_token: "{{ webex_api }}"
        msg: "MS swithchport {{ item.data.port_id }} with Description {{ item.data.name }} in Network {{ network_name }} has been created."
      loop: "{{ add_ms_swports.results }}"


    # since we need multiple tasks we will include them in the same iterator see ./tasks/c_swports-tasks.yaml.   
    - name: Configure - Modify catalyst switch ports
      include_tasks: ../tasks/c_swports-tasks.yaml
      loop: "{{ lookup('dict', c_swports, wantlist=True) }}"

    #- debug:
        #var: c_swports


    - name: WebexTeams - add catalyst switch port configurations
      community.general.cisco_webex:
        recipient_type: roomId
        recipient_id: "{{ roomid }}"
        msg_type: text
        personal_token: "{{ webex_api }}"
        msg: "Catalyst {{ item.value.hostname }}  Switchport {{ item.value.number }} in Network {{ network_name }} have been Configured."
      loop: "{{ lookup('dict', c_swports, wantlist=True) }}"


    - name: WebexTeams - network created
      community.general.cisco_webex:
        recipient_type: roomId
        recipient_id: "{{ roomid }}"
        msg_type: text
        personal_token: "{{ webex_api }}"
        msg: "Network {{ network_name }} in Orginization - {{ org_name }} has been created!"
